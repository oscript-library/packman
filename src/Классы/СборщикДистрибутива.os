
Перем ФайлМанифеста Экспорт;
Перем СоздаватьИнсталлятор Экспорт;
Перем СоздаватьФайлыПоставки Экспорт;
Перем ВыходнойКаталог Экспорт;
Перем ИмяПользователя Экспорт;

Перем Лог;

Функция Собрать(Знач УправлениеКонфигуратором, Знач ВерсияМетаданных, Знач ИмяКаталогаШаблонаВерсии) Экспорт
    
    Манифест = ПолучитьМанифестСборки(УправлениеКонфигуратором.КаталогСборки());
	Лог.Отладка("Использую шаблон манифеста: " + Манифест);
    УстановитьНомерСборкиВМанифесте(Манифест, ВерсияМетаданных, ИмяКаталогаШаблонаВерсии);
    
    Если ПустаяСтрока(ВыходнойКаталог) Тогда
		ВыходнойКаталогОбъект = Новый Файл(ОбъединитьПути(УправлениеКонфигуратором.КаталогСборки(), ОкружениеСборки.ИмяКаталогаФормированияДистрибутива()));
	Иначе
		ВыходнойКаталогОбъект = Новый Файл(ВыходнойКаталог);
	КонецЕсли;

	Если Не ВыходнойКаталогОбъект.Существует() Тогда
		СоздатьКаталог(ВыходнойКаталогОбъект.ПолноеИмя);
	ИначеЕсли ВыходнойКаталогОбъект.ЭтоКаталог() Тогда
		УдалитьФайлы(ВыходнойКаталогОбъект.ПолноеИмя, "*.*");
	Иначе
		УдалитьФайлы(Манифест);
		ВызватьИсключение "Каталог <" +ВыходнойКаталогОбъект.ПолноеИмя+ "> не является каталогом";
	КонецЕсли;
	
	// внешние файлы релиза
	УстановитьПеременнуюСреды("V8BuildRoot", УправлениеКонфигуратором.КаталогСборки());
    
    Параметры = УправлениеКонфигуратором.ПолучитьПараметрыЗапуска();
	Параметры.Добавить("/CreateDistributive """ + ВыходнойКаталогОбъект.ПолноеИмя + """");
	Параметры.Добавить("-File """ + Манифест + """");
	Если СоздаватьФайлыПоставки Тогда
        Параметры.Добавить("-MakeFiles");
    ИначеЕсли СоздаватьИнсталлятор Тогда
        Параметры.Добавить("-MakeInstall");
    КонецЕсли;

	Если Не ПустаяСтрока(ИмяПользователя) Тогда
		Параметры.Добавить("/N" + ИмяПользователя);
	КонецЕсли;

	Попытка
		УправлениеКонфигуратором.ВыполнитьКоманду(Параметры);
		Лог.Информация(УправлениеКонфигуратором.ВыводКоманды());
	Исключение
		УдалитьФайлы(Манифест);
		ВызватьИсключение;
	КонецПопытки;
	
	Возврат ВыходнойКаталогОбъект.ПолноеИмя;
    
КонецФункции // Собрать()

Функция ПолучитьМанифестСборки(Знач КаталогСборки)

	ИсходныйМанифест = ФайлМанифеста;
	РабочийМанифест = ПолучитьИмяВременногоФайла("package.edf");
	КопироватьФайл(ИсходныйМанифест, РабочийМанифест);
	
	Возврат РабочийМанифест;
	
КонецФункции

Процедура УстановитьНомерСборкиВМанифесте(Знач РабочийФайлМанифеста, Знач ВерсияМетаданных, Знач НомерСборки)

	Лог.Отладка("Устанавливаю версию: " + ВерсияМетаданных);

	ЧтениеТекста = Новый ЧтениеТекста(РабочийФайлМанифеста);
	Данные = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	НовыеДанные = СтрЗаменить(Данные, "%НомерСборки%", НомерСборки);
	НовыеДанные = СтрЗаменить(НовыеДанные, "%ВерсияМетаданных%", ВерсияМетаданных);
	
	Запись = Новый ЗаписьТекста(РабочийФайлМанифеста);
	Запись.Записать(НовыеДанные);
	Запись.Закрыть();

КонецПроцедуры

////////////////////////////////////////////////////////////////////

СоздаватьИнсталлятор = Истина;
СоздаватьФайлыПоставки = Ложь;

Лог = Логирование.ПолучитьЛог(ПараметрыСистемы.ИмяЛогаСистемы());